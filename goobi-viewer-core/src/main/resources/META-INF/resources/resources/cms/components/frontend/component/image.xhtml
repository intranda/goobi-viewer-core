<ui:composition
    xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite"
	xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:viewerForms="http://xmlns.jcp.org/jsf/composite/components/forms">

    <composite:interface>
		<composite:attribute name="component" required="true"/>
		<composite:attribute name="cmsContent" required="false" default="#{cc.attrs.component.firstContentItem.content}"/>
		<composite:attribute name="image" required="false" default="#{cc.attrs.cmsContent.mediaItem}"/>
		<composite:attribute name="imageLink" required="false" default="#{cc.attrs.cmsContent.mediaItem.linkURI}"/>
    </composite:interface>


    <composite:implementation>
    	<ui:fragment rendered="#{cc.attrs.cmsContent != null and cc.attrs.image != null and cc.attrs.component.hasAccess(userBean.user)}">
    	
			<!-- CONTENT ITEM IMAGE HALF -->
			<div class="content-component content-component__image
						-width-#{cc.attrs.width} #{cc.attrs.hideOnScreenSizes}
						#{cc.attrs.hideOnScreenSizes == 'hideMobile' ? '-hiddenOnMobile' : ''} 
						#{cc.attrs.hideOnScreenSizes == 'hideDesktop' ? '-hiddenOnDesktop' : ''}
						#{cc.attrs.component.isPrivate() and cc.attrs.component.hasAccess(userBean.user) ? '-isPrivate' : ''}">

				<!-- INFO: CONTENT ITEM IS NOT PUBLISHED YET -->
				<ui:fragment rendered="#{cc.attrs.component.isPrivate() and cc.attrs.component.hasAccess(userBean.user)}">
					<div class="content-component__not-published-info">#{msg.cms__content_not_published_yet}</div>
				</ui:fragment>
				
				<!-- IMAGE WITH LINK -->
	        	<ui:fragment rendered="#{cmsMediaBean.isImage(cc.attrs.image) and cc.attrs.cmsContent.mediaItem.linkURI != null and !cc.attrs.lightbox}">
					<div class="content-component__image">
						<a class="content-component__image-link" target="_blank" href="#{cc.attrs.cmsContent.mediaItem.linkURI}">
							<img src="#{cc.attrs.cmsContent.getUrl(1920, null)}" class="img-fluid content-component__image-img" alt="#{cc.attrs.image.alternativeText}" />
							<span class="content-component__image-text">#{cc.attrs.image.name}</span>
						</a>
					</div>
	            </ui:fragment>

	            <!-- IMAGE WITH LIGHTBOX -->
	        	<ui:fragment rendered="#{cmsMediaBean.isImage(cc.attrs.image) and cc.attrs.lightbox}">
					<div class="content-component__image">
						<a class="content-component__image-lightbox-link" aria-label="#{msg.open_as_lightbox}: #{cc.attrs.image.name}" data-target="imageLightbox" href="#{cc.attrs.cmsContent.getUrl(1920, null)}">
							<img src="#{cc.attrs.cmsContent.getUrl(1920, null)}" class="img-fluid content-component__image-lightbox-img " alt="#{cc.attrs.image.alternativeText}" title="#{cc.attrs.image.name}" />
							<span class="content-component__image-text">#{cc.attrs.image.name}</span>
						</a>
					</div>
	            </ui:fragment>
	            
	            <!-- SIMPLE IMAGE WITHOUT LINK OR LIGHTBOX -->
	        	<ui:fragment rendered="#{cmsMediaBean.isImage(cc.attrs.image) and !cc.attrs.lightbox and cc.attrs.cmsContent.mediaItem.linkURI == null}">
					<div class="content-component__image">
						<img src="#{cc.attrs.cmsContent.getUrl(1920, null)}" class="img-fluid content-component__image-img" alt="#{cc.attrs.image.alternativeText}" />
						<span class="content-component__image-text">#{cc.attrs.image.name}</span>
					</div>
	            </ui:fragment>
	            
				<!-- VIDEO FILE -->
	            <ui:fragment rendered="#{cmsMediaBean.isVideo(cc.attrs.image)}">
					<div class="content-component__video">
						<video controls="controls" class="video-file-element" poster="#{request.contextPath}#{navigationHelper.getResource('images/icons/video_placeholder.png')}" title="#{cc.attrs.image.name}">
							<source src="#{cc.attrs.cmsContent.url}"/>
						</video>
					</div>
	            </ui:fragment>
					
				</div>

		</ui:fragment>
    </composite:implementation>
</ui:composition>