<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" 
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:f="http://xmlns.jcp.org/jsf/core" 
    xmlns:jsf="http://xmlns.jcp.org/jsf" 
    xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
    xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner" 
    xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
    xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets">

    <!-- IMAGE CONTAINER -->
    
    <style>
    
    #preloader {
    	display: flex;
    	width: 100%;
    	height: 100%;
    	justify-content: center;
 		align-items: center;
  		flex-direction: column;
    }
    #world canvas {
    	display: none;
    }
    #world #loadingProgress {
     	display: none; 
    }    
    #world #objectLoader {
     	display: none; 
    }  
    </style>
    
    <div id="objectContainer" class="view-object__object-3d">        
        <!-- MAP -->
        <div id="world" class="view-object__object-3d-world" data-allow-download="#{activeDocumentBean.viewManager.currentPage.accessPermissionImageDownload}">
            <div id="preloader">
 
        		<p id="beforeLoad" class="before-load view-object__object-3d-world-before-load-text">
        			<h:outputText value="#{msg.object_3d__before_load}" escape="false" /> 
        		</p>
        		<button id="startLoadButton" class="before-load btn btn--default" onclick="loadObject()">#{msg.show}</button>
		        <progress id="loadingProgress"  max="undefined" value="undefined"></progress>
		        <img id="objectLoader" src="#{request.contextPath}/resources/images/infinity_loader.svg" />

        	</div>
        </div>
    </div>

    <!-- MOBILE IMAGE VIEW -->
        <div id="imageContainerMobile" class="view-object__image-mobile">

        </div>

    <!-- 3D-Models -->
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/three.min.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/OBJLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/MTLLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/PLYLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/STLLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/FBXLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/TDSLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/DRACOLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/loaders/GLTFLoader.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/controls/OrbitControls.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/libs/three/dependencies/inflate.min.js"></script>
    <script type="text/javascript"
        src="#{request.contextPath}/resources/javascript/dist/objectView.min.js"></script>

    <script type="text/javascript">
  		//<![CDATA[
    	var worldElement = $( "#world" );
        var objectVisible = $( "#objectContainer" ).is( ":visible" );
        var access = #{activeDocumentBean.viewManager.currentPage.accessPermission3DObject};
        var accessDeniedMessage = $( "<div />" ).addClass( "view-object__access-denied" ).html( '#{msg.noImage_accessDenied}' );
        
        var worldConfig = {
	 			controls: {
	 			    xAxis: {
	 			        rotateLeft: '.image-rotate_left',
	 			        rotateRight: '.image-rotate_right'
	 			    },
	 			   yAxis: {
	 			        rotateLeft: '.image-controls__action.rotate-left',
	 			        rotateRight: '.image-controls__action.rotate-right'
	 			    },
	 			   zAxis: {
	 			        rotateLeft: '#rotate-left-z',
	 			        rotateRight: '#rotate-right-z'
	 			    },
	 			    position: {
	 			    	reset: '.image-reset'
	 			    },
	 			    zoom: {
	 			        resetZoom: '#reset#zoom'
	 			    }
	 			},
	    		container: {
	    			id: "world"
	    		},
	    		resourcesPath: "#{request.contextPath}/resources/javascript/libs/"
		 };
                
       	// desktop object view
       	if ( access && objectVisible ) {
	 		var world = WorldGenerator.create(worldConfig);
	 		fetch("#{activeDocumentBean.viewManager.currentObjectUrl}")
	 		.then(resp => resp.json())
	 		.then(json => {
	 			console.log("object details: ", json);
	 			let modelSize = json.resourceSizes[json.uri];
	 			if(modelSize) {	 				
	 				$("#objectSize").text((modelSize / 1000 / 1000).toFixed(2) + " MB")
	 			} else {
	 				// if object size unknown change all text
	 				const unknownSizeMsgKey = '#{msg.object_3d__before_load_unknown_size}';
	 			 	$("#beforeLoad").text(unknownSizeMsgKey);
	 			}
	       		world.loadingMonitor.subscribe(e => {
// 	       			console.log("load progress ", e);
	       			let loaded = e.loaded;
	       			let total = json.resourceSizes[e.url];
	       			let finished = total - loaded  <= 0;
	       			console.log("loaded ", loaded, " of ", total);
	       			$("#loadingProgress").attr("max", total).attr("title", e.url).val(loaded);
	       			if(total && finished) {
	       				$('#loadingProgress').hide();
	            		$('#objectLoader').show();
	       			}
	       		});
	 		})
        } else if ( objectVisible ) {
            worldElement.append( accessDeniedMessage );
       	}
       	
       	function loadObject() {
       		$("#startLoadButton").hide();
       		$("#loadingProgress").show();
       		const params = {
	 	 		 url: "#{activeDocumentBean.viewManager.currentObjectUrl}",
	 			 position: { x:0, y:0, z:-0 },
	 			 rotation:  { x:0, y:0, z:0 },
	 			 size:  10,
	 			 material: {
	 					color: 0x44bb33
	 				},
	 			focus: true,
	 		 }
       		console.log("loading object with params ", params);
	 		world.loadObject(params).then(function(object) {
	 	       	 $('#preloader').fadeOut(2000);
	 	       	 $("#world canvas").show();
	 		 	world.render();
	 		 }).catch(function(error) {
	 		    $('#preloader').fadeOut(2000);
	 			 console.error("failed to load: ", error);
	 		 })
       	}

        function freeJSResources(data) {
	        if(!data || data.status == 'begin') {									            
		        if(viewImage) {
		            viewImage.close();
		        }
		        if(world) {
		            world.dispose();
		        }
	        }
	    }
      	//]]>
    </script>
</ui:composition>