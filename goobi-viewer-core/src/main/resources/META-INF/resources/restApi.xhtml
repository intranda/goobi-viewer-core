<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:util="http://goobi.io/util"
	xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner"
	xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets"
	template="/resources/themes/#{navigationHelper.theme}/templateBlankUnstyled.html">

	<ui:define name="metadata">
		<f:metadata>
			<f:event type="preRenderView"
				listener="#{navigationHelper.setCurrentPage('API', false, true)}" />
		</f:metadata>
	</ui:define>

	<ui:define name="head">
		<link rel="stylesheet"	href="#{request.contextPath}/resources/css/libs/swagger/swagger-ui.css" />
		<script type="text/javascript"	src="#{request.contextPath}/resources/javascript/libs/swagger/swagger-ui-bundle.js" />
			<title>API -
				#{adminThemesBean.getThemeLabel(configurationBean.name)}</title>
	</ui:define>

	<ui:define name="content">

		<!-- INCLUDED STYLE CSS FOR API PAGE-->
		<h:outputStylesheet library="css" name="/misc/rest_api.css"  />

		<div class="swagger-api__wrapper">
			<div class="swagger-api__intro-wrapper">
				<h1 class="swagger-api__heading">Available versions of the Goobi viewer API</h1>
				<p class="swagger-api__info">Please choose version:</p>
				<div class="swagger-api__options">
					<button id="swagger-api__option-v1">API v1</button>
					<button id="swagger-api__option-v2">API v2</button>
				</div>
			</div>

			<div class="swagger-api__containers">
				<!-- DYNAMICALLY LOADED CONTENT API V1 -->
				<div id="swagger-container-v1" class="swagger-api__box-v1">
					<util:icon icon="loader-2" svgClass="icon icon-lg icon-rotate swagger-api__loader-icon" />
				</div>

				<!-- DYNAMICALLY LOADED CONTENT API V2 -->
				<div id="swagger-container-v2" class="swagger-api__box-v2">
					<util:icon icon="loader-2" svgClass="icon icon-lg icon-rotate swagger-api__loader-icon" />
				</div>
			</div>
		</div>



		<script>


      //<![CDATA[
		$(document).ready(function () {

		      $('#swagger-api__option-v1').addClass('-active');
			  $('#swagger-api__option-v1').click(function () {
			      $('#swagger-container-v2').hide();
			      $('#swagger-container-v1').fadeIn('fast');
			      $(this).addClass('-active');
			      $('#swagger-api__option-v2').removeClass('-active');
			  });

			  $('#swagger-api__option-v2').click(function () {
			      $('#swagger-container-v1').hide();
			      $('#swagger-container-v2').fadeIn('fast');
			      $(this).addClass('-active');
			      $('#swagger-api__option-v1').removeClass('-active');
			  });

		});

		    $('#swagger-api__option-v2').one('click', function(e){
		        e.preventDefault();

		        fetch("#{request.contextPath}/api/v2/openapi.json")
		        .then(res => res.json())
		        .then(json => {
		            console.log("init SwaggerUIBundle with ", json);
		            const ui = SwaggerUIBundle({
		        	    dom_id: '#swagger-container-v2',
		        	    spec: json,
		        	    //all POST request need to end with "/". Otherwise they won't work because of request forwarding
		        	    requestInterceptor : request => {
		        	        if(!request.url.endsWith("/") && !request.url.includes("?")) {
		        	            request.url = request.url + "/";
		        	        }
			                console.log("requesting ", request);
			                return request;
			            },
		        	  });
		        })

		    });


	        fetch("#{request.contextPath}/api/v1/openapi.json")
	        .then(res => res.json())
	        .then(json => {
	            console.log("init SwaggerUIBundle with ", json);
	            const ui = SwaggerUIBundle({
	        	    dom_id: '#swagger-container-v1',
	        	    spec: json,
	        	    //all POST request need to end with "/". Otherwise they won't work because of request forwarding
	        	    requestInterceptor : request => {
	        	        if(!request.url.endsWith("/") && !request.url.includes("?")) {
	        	            request.url = request.url + "/";
	        	        }
		                console.log("requesting ", request);
		                return request;
		            },
	        	  });
	        })



        //]]>
        </script>

	</ui:define>

</ui:composition>
