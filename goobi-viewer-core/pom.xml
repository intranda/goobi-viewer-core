<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.goobi.viewer</groupId>
	<artifactId>viewer-core</artifactId>
	<version>24.09-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Goobi viewer - Core</name>
	<description>The Goobi viewer is an open source solution for the presentation of digitized cultural assets.</description>
	<url>https://github.com/intranda/goobi-viewer-core</url>

	<organization>
		<name>Goobi</name>
		<url>https://goobi.io</url>
	</organization>

	<licenses>
		<license>
			<name>GPL v2 or later</name>
			<url>https://raw.githubusercontent.com/intranda/goobi-viewer-core/master/LICENSE</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>scm:git:https://github.com/intranda/goobi-viewer-core/</url>
		<connection>scm:git:https://github.com/intranda/goobi-viewer-core/</connection>
	</scm>


	<repositories>
		<repository>
			<id>intranda-public</id>
			<url>https://nexus.intranda.com/repository/maven-public</url>
		</repository>
	</repositories>


	<distributionManagement>
		<repository>
			<id>intranda-releases</id>
			<url>https://nexus.intranda.com/repository/maven-releases</url>
		</repository>
		<snapshotRepository>
			<id>intranda-snapshots</id>
			<url>https://nexus.intranda.com/repository/maven-snapshots</url>
		</snapshotRepository>
		<site>
			<id>intranda-snapshots</id>
			<url>dav:https://nexus.intranda.com/repository/maven-raw/goobi-viewer/</url>
		</site>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skipTests>true</skipTests>
		<skipDependencyCheck>true</skipDependencyCheck>
		<failOnSnapshot>false</failOnSnapshot>
		<maven.compiler.release>17</maven.compiler.release>

		<!-- Sonar -->
		<sonar.projectKey>intranda_goobi-viewer-core</sonar.projectKey>
		<sonar.organization>intranda</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.java.source>17</sonar.java.source>
		<sonar.java.target>17</sonar.java.target>

		<!-- Checkstyle -->
		<checkstyle.max.violations>105</checkstyle.max.violations>
		<skipCheckstyle>true</skipCheckstyle>

		<!-- Manifest information -->
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<buildDate>${maven.build.timestamp}</buildDate>

		<!-- intranda libraries -->
		<alto.version>1.6.1</alto.version>
		<ics.version>3.16.1</ics.version>
		<tei-conversion.version>1.3.2</tei-conversion.version>
		<iiif-api-model.version>2.6.4</iiif-api-model.version>
		<normdataimporter.version>1.11.2</normdataimporter.version>

		<!-- other libraries -->
		<angus-mail.version>2.0.3</angus-mail.version>
		<citationstyles.version>24.3</citationstyles.version>
		<citeproc-java.version>3.1.0</citeproc-java.version>
		<commons-codec.version>1.17.1</commons-codec.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<commons-configuration2.version>2.11.0</commons-configuration2.version>
		<commons-io.version>2.17.0</commons-io.version>
		<commons-jxpath.version>1.3</commons-jxpath.version>
		<commons-lang3.version>3.17.0</commons-lang3.version>
		<commons-net.version>3.11.1</commons-net.version>
		<commons-text.version>1.12.0</commons-text.version>
		<dbunit.version>2.8.0</dbunit.version>
		<eclipselink.version>4.0.4</eclipselink.version>
		<h2.version>1.4.200</h2.version>
		<httpclient.version>4.5.14</httpclient.version>
		<httpcore.version>4.4.16</httpcore.version>
		<httpmime.version>4.5.14</httpmime.version>
		<icu.version>75.1</icu.version>
		<inject.version>1</inject.version>
		<jackson.version>2.18.0</jackson.version>
		<jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
		<jakarta.servlet-api.version>4.0.4</jakarta.servlet-api.version>
		<javax.annotation.version>1.3.2</javax.annotation.version>
		<javax.el.version>3.0.1-b06</javax.el.version>
		<javax.faces.version>2.3.9</javax.faces.version>
		<jakarta.mail-api.version>2.1.3</jakarta.mail-api.version>
		<jakarta.persistence.version>3.2.0</jakarta.persistence.version>
		<jakarta.jms-api.version>3.1.0</jakarta.jms-api.version>
		<javax.websocket.version>1.1</javax.websocket.version>
		<javax.ws.rs-api.version>2.1.1</javax.ws.rs-api.version>
		<!-- This dependency is declared as ignoredUnusedDeclaredDependency, too -->
		<javax.jstl.version>1.2</javax.jstl.version>
		<jaxen.version>2.0.0</jaxen.version>
		<jaxb-api.version>2.4.0-b180830.0359</jaxb-api.version>
		<jaxb-runtime.version>2.3.9</jaxb-runtime.version>
		<jdom2.version>2.0.6.1</jdom2.version>
		<jersey.version>2.45</jersey.version>
		<jersey-guava.version>2.26-b03</jersey-guava.version>
		<!-- https://github.com/stleary/JSON-java -->
		<json.version>20240303</json.version>
		<jsoup.version>1.18.1</jsoup.version>
		<junit.version>5.11.1</junit.version>
		<mariadb-java-client.version>3.4.1</mariadb-java-client.version>
		<mockito.version>5.14.1</mockito.version>
		<mockserver.version>5.15.0</mockserver.version>
		<oauth.version>1.0.2</oauth.version>
		<omnifaces.version>3.14.6</omnifaces.version>
		<openpdf.version>1.3.40</openpdf.version>
		<poi.version>5.3.0</poi.version>
		<prettyfaces.version>3.5.2.Final</prettyfaces.version>
		<rome.version>2.1.0</rome.version>
		<log4j.version>2.23.1</log4j.version>
		<solr.version>9.7.0</solr.version>
		<swagger.version>2.2.24</swagger.version>
		<tomcat.version>9.0.58</tomcat.version>
		<weld-servlet-shaded.version>3.1.9.Final</weld-servlet-shaded.version>
		<xmlParserAPIs.version>2.6.2</xmlParserAPIs.version>
		<xml-apis.version>1.4.01</xml-apis.version>
		<activemq.version>6.1.3</activemq.version>
		<spring.version>5.3.39</spring.version>
		<reflections.version>0.10.2</reflections.version>
		<quartz.version>2.3.2</quartz.version>
		<cron-expression-descriptor.version>1.2.10</cron-expression-descriptor.version>
		<slf4j.version>2.0.16</slf4j.version>
	</properties>


	<dependencies>
		<!-- intranda libraries -->
		<dependency>
			<groupId>de.intranda.goobi</groupId>
			<artifactId>alto</artifactId>
			<version>${alto.version}</version>
		</dependency>
		<dependency>
			<groupId>de.intranda.digiverso.ocr</groupId>
			<artifactId>tei-conversion</artifactId>
			<version>${tei-conversion.version}</version>
		</dependency>
		<dependency>
			<groupId>de.intranda.api.iiif</groupId>
			<artifactId>iiif-api-model</artifactId>
			<version>${iiif-api-model.version}</version>
		</dependency>
		<dependency>
			<groupId>de.intranda.goobi</groupId>
			<artifactId>normdataimporter</artifactId>
			<version>${normdataimporter.version}</version>
		</dependency>
		<dependency>
			<groupId>de.intranda.contentserver</groupId>
			<artifactId>ics</artifactId>
			<version>${ics.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.dataformat</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.lowagie</groupId>
					<artifactId>itext</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.xmlbeans</groupId>
					<artifactId>xmlbeans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.jersey.containers</groupId>
					<artifactId>jersey-container-servlet-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jakarta.ws.rs</groupId>
					<artifactId>jakarta.ws.rs-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>



		<!-- other libraries -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>${xml-apis.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>de.undercouch</groupId>
			<artifactId>citeproc-java</artifactId>
			<version>${citeproc-java.version}</version>
		</dependency>
		<dependency>
			<groupId>org.citationstyles</groupId>
			<artifactId>styles</artifactId>
			<version>${citationstyles.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.citationstyles</groupId>
			<artifactId>locales</artifactId>
			<version>${citationstyles.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>${commons-configuration2.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-jxpath</groupId>
			<artifactId>commons-jxpath</artifactId>
			<version>${commons-jxpath.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>${commons-net.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>${commons-text.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>${httpcore.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>${httpmime.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>${icu.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
			<version>${jakarta.annotation-api.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.mail</groupId>
			<artifactId>jakarta.mail-api</artifactId>
			<version>${jakarta.mail-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.angus</groupId>
			<artifactId>jakarta.mail</artifactId>
			<version>${angus-mail.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotation.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>${javax.websocket.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>${javax.el.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<version>${javax.faces.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${inject.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>${jakarta.persistence.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom2</artifactId>
			<version>${jdom2.version}</version>
		</dependency>
		 <dependency>
			 <groupId>org.glassfish.jersey.core</groupId>
			 <artifactId>jersey-client</artifactId>
			 <version>${jersey.version}</version>
			 <exclusions>
				 <exclusion>
					 <groupId>jakarta.ws.rs</groupId>
					 <artifactId>jakarta.ws.rs-api</artifactId>
				 </exclusion>
			 </exclusions>
		 </dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>jakarta.ws.rs</groupId>
					<artifactId>jakarta.ws.rs-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-common</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>jakarta.ws.rs</groupId>
					<artifactId>jakarta.ws.rs-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>jakarta.ws.rs</groupId>
					<artifactId>jakarta.ws.rs-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>jakarta.ws.rs</groupId>
					<artifactId>jakarta.ws.rs-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<version>${eclipselink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.core</artifactId>
			<version>${eclipselink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${json.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${javax.jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>${jaxen.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>${jaxb-runtime.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>${mariadb-java-client.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-core</artifactId>
			<version>${mockserver.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-client-java</artifactId>
			<version>${mockserver.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-netty</artifactId>
			<version>${mockserver.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.client</artifactId>
			<version>${oauth.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
			<version>${omnifaces.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.librepdf</groupId>
			<artifactId>openpdf</artifactId>
			<version>${openpdf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ocpsoft.rewrite</groupId>
			<artifactId>rewrite-servlet</artifactId>
			<version>${prettyfaces.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ocpsoft.rewrite</groupId>
			<artifactId>rewrite-integration-faces</artifactId>
			<version>${prettyfaces.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ocpsoft.rewrite</groupId>
			<artifactId>rewrite-config-prettyfaces</artifactId>
			<version>${prettyfaces.version}</version>
		</dependency>
		<dependency>
			<groupId>com.rometools</groupId>
			<artifactId>rome</artifactId>
			<version>${rome.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${javax.ws.rs-api.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${jakarta.servlet-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>${solr.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj-streaming</artifactId>
			<version>${solr.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet-shaded</artifactId>
			<version>${weld-servlet-shaded.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-models</artifactId>
			<version>${swagger.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-integration</artifactId>
			<version>${swagger.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
			<version>${activemq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
			<version>${activemq.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-kahadb-store</artifactId>
			<version>${activemq.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-jaas</artifactId>
			<version>${activemq.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-stomp</artifactId>
			<version>${activemq.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- FIXME SPRING -->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-spring</artifactId>
			<version>${activemq.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>${reflections.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>it.burning</groupId>
			<artifactId>cron-expression-descriptor</artifactId>
			<version>${cron-expression-descriptor.version}</version>
		 </dependency>
		 <!-- This dependency is used for jakarta.jms -->
		 <dependency>
			<groupId>jakarta.jms</groupId>
			<artifactId>jakarta.jms-api</artifactId>
			<version>${jakarta.jms-api.version}</version>
		</dependency>
		<!-- SLF4J nop is needed to get rid of logging spam -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<!-- used for mvn versions:display-plugin-updates -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.8.8</version>
								</requireMavenVersion>
								<requireReleaseDeps>
									<message>No Snapshots Allowed!</message>
								</requireReleaseDeps>
							</rules>
							<fail>${failOnSnapshot}</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- used for mvn verify -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.7.1</version>
				<executions>
					<execution>
						<id>analyze</id>
						<goals>
							<goal>analyze-only</goal>
						</goals>
						<configuration>
							<failOnWarning>true</failOnWarning>
							<ignoredUsedUndeclaredDependencies>
								<!-- FALSE POSITIVE, SWITCHES WITH -jakarta PACKAGE IF DECLARED OTHER WAY ROUND -->
								<ignoredUnusedDeclaredDependency>io.swagger.core.v3:swagger-annotations-jakarta</ignoredUnusedDeclaredDependency>
							</ignoredUsedUndeclaredDependencies>

							<ignoredUnusedDeclaredDependencies>
								<!-- FALSE POSITIVE, SWITCHES WITH -jakarta PACKAGE IF DECLARED OTHER WAY ROUND -->
								<ignoredUnusedDeclaredDependency>io.swagger.core.v3:swagger-annotations</ignoredUnusedDeclaredDependency>

								<!-- JSTL is used within JSF for example c:forEach -->
								<ignoredUnusedDeclaredDependency>javax.servlet:jstl</ignoredUnusedDeclaredDependency>

								<!-- Jaxen ist used during runtime from jdom2.XPathExpression -->
								<ignoredUnusedDeclaredDependency>jaxen:jaxen</ignoredUnusedDeclaredDependency>

								<!-- The jersey-container-servlet dependency is used for startup during runtime Unit tests run without it though -->
								<ignoredUnusedDeclaredDependency>org.glassfish.jersey.containers:jersey-container-servlet</ignoredUnusedDeclaredDependency>

								<!-- JXPath is used at XPathExpressionEngine from org.apache.commons.configuration2, i.e. LanguageHelper -->
								<ignoredUnusedDeclaredDependency>commons-jxpath:commons-jxpath</ignoredUnusedDeclaredDependency>

								<!-- The MariaDB java client is used for the database connection and configured in the Tomcat -->
								<ignoredUnusedDeclaredDependency>org.mariadb.jdbc:mariadb-java-client</ignoredUnusedDeclaredDependency>

								<!-- EclipseLink Java Persistence API for database management -->
								<ignoredUnusedDeclaredDependency>org.eclipse.persistence:org.eclipse.persistence.jpa</ignoredUnusedDeclaredDependency>

								<!-- javax.annotation is not part of jdk 11 anymore -->
								<ignoredUnusedDeclaredDependency>javax.annotation:javax.annotation-api</ignoredUnusedDeclaredDependency>

								<!-- org.citationstyles.* are runtime resources for citeproc -->
								<ignoredUnusedDeclaredDependency>org.citationstyles:locales</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>org.citationstyles:styles</ignoredUnusedDeclaredDependency>

								<!-- jersey client is falsely declared as unused blocking maven install (windows developer system only) -->
								<ignoredUnusedDeclaredDependency>org.glassfish.jersey.core:jersey-client</ignoredUnusedDeclaredDependency>

								<!-- jaxb-runtime needs to be available to remove the warning "JAXBContext implementation could not be found. WADL feature is disabled" during tomcat startup -->
								<ignoredUnusedDeclaredDependency>org.glassfish.jaxb:jaxb-runtime</ignoredUnusedDeclaredDependency>

								<!-- rewrite-servlet is used by prettyfaces -->
								<ignoredUnusedDeclaredDependency>org.ocpsoft.rewrite:rewrite-integration-faces</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>org.ocpsoft.rewrite:rewrite-servlet</ignoredUnusedDeclaredDependency>

								<!-- H2 is used as database for unit tests -->
								<ignoredUnusedDeclaredDependency>com.h2database:h2</ignoredUnusedDeclaredDependency>

								<!-- SLF4J nop is needed to get rid of logging spam like this
									SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
									SLF4J: Defaulting to no-operation (NOP) logger implementation
									SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
								-->
								<ignoredUnusedDeclaredDependency>org.slf4j:slf4j-nop</ignoredUnusedDeclaredDependency>

								<!-- angus-mail is the implementation of the jakarta.mail specification and used for sending emails -->
								<ignoredUnusedDeclaredDependency>org.eclipse.angus:jakarta.mail</ignoredUnusedDeclaredDependency>

								<!-- spring-web: MediaType class needed for some unit test -->
								<ignoredUnusedDeclaredDependency>org.springframework:spring-web</ignoredUnusedDeclaredDependency>

								<!-- junit-jupiter is used to run the tests, otherwise it will fail in maven -->
								<ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter</ignoredUnusedDeclaredDependency>

								<!-- activemq libs -->
									<!-- KahaDB is the used file based persistence database and declared in the config file  -->
									<ignoredUnusedDeclaredDependency>org.apache.activemq:activemq-kahadb-store</ignoredUnusedDeclaredDependency>

									<!-- JAAS, Java Authentication and Authorization Service is used for the authentication defined in the config_activemq.xml -->
									<ignoredUnusedDeclaredDependency>org.apache.activemq:activemq-jaas</ignoredUnusedDeclaredDependency>

									<!-- FIXME STOMP, Simple Text Oriented Messaging Protocol, configured together with openwire as transportConnector in the config_activemq.xml, to be clarified if needed -->
									<ignoredUnusedDeclaredDependency>org.apache.activemq:activemq-stomp</ignoredUnusedDeclaredDependency>

									<!-- FIXME -->
									<ignoredUnusedDeclaredDependency>org.apache.activemq:activemq-spring</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.springframework:spring-beans</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.springframework:spring-context</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.springframework:spring-core</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>org.springframework:spring-expression</ignoredUnusedDeclaredDependency>

							</ignoredUnusedDeclaredDependencies>

							<ignoredNonTestScopedDependencies>
								<!-- jersey-container-servlet-core is falsely declared as unused blocking maven install (windows developer system only) -->
								<ignoredNonTestScopedDependency>org.glassfish.jersey.containers:jersey-container-servlet-core</ignoredNonTestScopedDependency>
							</ignoredNonTestScopedDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<compilerArgs>
						<arg>-Xlint:deprecation</arg>
						<arg>-Xlint:unchecked</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
					<excludes>
						<exclude>**/Abstract*.java</exclude>
					</excludes>
					<systemPropertyVariables>
						<java.util.logging.config.file>src/test/resources/log4j2.test.xml</java.util.logging.config.file>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.4.2</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<ApplicationName>Goobi viewer Core</ApplicationName>
							<version>${project.version}</version>
							<Implementation-Version>${buildNumber}</Implementation-Version>
							<Implementation-Build-Date>${buildDate}</Implementation-Build-Date>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>**/config_viewer.xml</exclude>
						<exclude>**/contentServerConfig.xml</exclude>
						<exclude>**/log4j2.xml</exclude>
						<exclude>/META-INF/resources/resources/javascript/tests/</exclude>
						<exclude>/META-INF/resources/resources/javascript/dev/</exclude>
					</excludes>

				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- get git version number -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.9.10</version>
				<configuration>
					<commitIdGenerationMode>flat</commitIdGenerationMode>
					<gitDescribe>
						<skip>true</skip>
					</gitDescribe>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<shortRevisionLength>7</shortRevisionLength>
					<doCheck>false</doCheck>
				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- This plugin is specified with the same config options in the reporting section below, too -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<doclint>none</doclint>
					<failOnWarnings>true</failOnWarnings>
					<!-- Specifies the tags to be fixed automatically when running the mvn javadox:fix command, see:
						 https://maven.apache.org/plugins/maven-javadoc-plugin/fix-mojo.html#fixTags
					-->
					<fixTags>link,throws,return,param</fixTags>
					<tags>
						<tag>
							<!-- Disables custom @should tag in Javadoc see:
								 https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#tags
							-->
							<name>should</name>
							<placement>X</placement>
						</tag>
					</tags>
				</configuration>
				<executions>
					<execution>
						<id>check-javadoc</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				 </executions>
			</plugin>
			<!-- used for test coverage report in Jenkins -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- used for mvn versions:display-dependency-updates -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.17.1</version>
				<configuration>
					<rulesUri>file://${basedir}/version-number-rules.xml</rulesUri>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>9.2.0</version>
				<configuration>
					<!--failBuildOnCVSS>5.0</failBuildOnCVSS-->
					<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
					<knownExploitedEnabled>false</knownExploitedEnabled>
					<skipProvidedScope>true</skipProvidedScope>
					<skipTestScope>true</skipTestScope>
					<format>ALL</format>
					<skip>${skipDependencyCheck}</skip>
					<suppressionFiles>
						<suppressionFile>file://${basedir}/dependency-suppression.xml</suppressionFile>
					</suppressionFiles>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.4.0</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>10.18.2</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>checkstyle-check</id>
						<phase>verify</phase>
						<configuration>
							<skip>${skipCheckstyle}</skip>
							<failOnViolation>true</failOnViolation>
							<failsOnError>false</failsOnError>
							<logViolationsToConsole>true</logViolationsToConsole>
							<maxAllowedViolations>${checkstyle.max.violations}</maxAllowedViolations>
							<violationSeverity>warning</violationSeverity>
							<configLocation>checkstyle.xml</configLocation>
							<inputEncoding>UTF-8</inputEncoding>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<doclint>none</doclint>
					<failOnWarnings>true</failOnWarnings>
					<fixTags>link,throws,return,param</fixTags>
					<tags>
						<tag>
							<name>should</name>
							<placement>X</placement>
						</tag>
					</tags>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
